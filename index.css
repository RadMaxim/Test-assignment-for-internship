* {
  font-family: mainFont;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
@font-face {
  font-family: mainFont;
  src: url("./fonts/SegoeUI-Light.woff");
}

::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px rgb(184, 184, 184);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: rgb(151, 151, 151);
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #000000;
}

svg {
  fill: white;
  width: 28px;
  height: 28px;
  cursor: pointer;
}

section {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 30px;
       column-gap: 30px;
}

header,
main {
  padding: 0 15px;
}

body {
  position: relative;
  display: grid;
  grid-template-columns: 20vw 60vw 20vw;
  grid-template-rows: 10vh 80vh 10vh;
  grid-template-areas: "header header header" ". main ." "footer footer footer";
  transition: background 0.5s ease;
}

header {
  color: rgb(217, 217, 217);
  font-weight: 800;
  grid-area: header;
  display: flex;
  justify-content: center;
  align-items: center;
}

main {
  grid-area: main;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 30px;
}
main div:nth-of-type(2) {
  font-size: 36px;
  color: white !important;
  font-weight: 700 !important;
}
main div:nth-of-type(3) {
  font-size: 32px;
  color: white !important;
  font-weight: 700 !important;
}
main div:nth-of-type(4) {
  width: 60%;
}
main div:nth-of-type(4) input {
  width: 100%;
  height: 40px;
  outline: none;
  border: none;
  font-size: 40px;
  text-align: center;
  background-color: rgba(0, 0, 0, 0);
  border-bottom: 4px solid rgb(255, 255, 255);
  color: white;
}
main #timer {
  font-size: 7em;
  font-weight: 900;
  color: white !important;
}

footer {
  font-weight: 800;
  grid-area: footer;
  color: rgb(217, 217, 217);
  display: flex;
  justify-content: space-between;
  align-items: center;
  display: grid;
  grid-template-columns: 25vw 50vw 25vw;
  grid-template-rows: 100%;
  grid-template-areas: "setting center tasks";
}

.tasks {
  grid-area: tasks;
  position: relative;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding-right: 15px;
}
.tasks label[for=task] {
  cursor: pointer;
}
.tasks label[for=task]:hover {
  color: white;
}
.tasks .Alltask {
  border-radius: 10px;
  transition: max-height 0.5s ease, opacity 0.5s ease;
  position: absolute;
  opacity: 0;
  width: 250px;
  max-height: 300px;
  background-color: rgb(255, 255, 255);
  top: -320px;
  left: 0px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding: 5px;
}
.tasks .Alltask .Alltask_container {
  width: 100%;
  max-height: 300px;
  overflow-x: hidden;
  overflow-y: scroll;
}
.tasks .Alltask .EmptyListOfTasks {
  display: none;
}
.tasks .Alltask .Alltask_container:not(:has(div)) ~ .EmptyListOfTasks {
  display: block;
  color: black;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  row-gap: 10px;
}
.tasks .Alltask .Alltask_container:not(:has(div)) ~ .EmptyListOfTasks button {
  background-color: #000000;
  color: white;
  padding: 5px 20px;
  cursor: pointer;
  transition: 1s background-color ease, 0.2s color ease-in;
  border: none;
  outline: none;
}
.tasks .Alltask .Alltask_container:not(:has(div)) ~ .EmptyListOfTasks button:hover {
  background-color: white;
  color: black;
}
.tasks input[type=checkbox] {
  display: none;
}
.tasks input[type=checkbox]:checked ~ .Alltask {
  transition: 0.5s ease;
  opacity: 1;
  top: -320px;
  left: 0px;
}

.setting {
  grid-area: setting;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  padding-left: 15px;
}

nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 60%;
  width: 100%;
}

.date {
  position: relative;
}

.add_date {
  display: none;
  position: absolute;
  right: 200px;
}

.city_weather {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 25px;
  cursor: pointer;
}
.city_weather #city:hover {
  color: white;
}
.city_weather #weather:hover {
  color: white;
}

.date {
  width: 200px;
  height: 100%;
  display: flex;
  justify-content: flex-end;
}

.date:hover .add_date {
  cursor: pointer;
  display: block;
}

.morning {
  background: url("./img/back/02 (1).jpg") no-repeat center center/cover;
}

.afternoon {
  background: url("./img/back/03 (1).jpg") no-repeat center center/cover;
}

.evening {
  background: url("./img/back/04 (1).jpg") no-repeat center center/cover;
}

.night {
  background: url("./img/back/01 (1).jpg") no-repeat center center/cover;
}

.left_link_section {
  text-align: center;
}
.left_link_section div:hover {
  color: white;
  cursor: pointer;
}

.center {
  grid-area: center;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
  transition: 0.5s;
}

.myName {
  opacity: 0;
  transform: translateY(-50%);
  transition: 0.5s;
}

p {
  transition: 0.5s;
}

section.center:hover p {
  transition: 0.5s;
  transform: translateY(-20px);
}

section.center:hover .myName {
  opacity: 1;
  transform: translateY(0%);
  transition: 0.5s;
}

.task {
  display: grid;
  grid-template-columns: 10% 70% 10%;
  grid-template-rows: auto;
  grid-template-areas: "input p button";
  min-height: 40px;
  -moz-column-gap: 5px;
       column-gap: 5px;
  row-gap: 5px;
  align-items: center;
}
.task p {
  grid-area: p;
  color: black;
  font-size: 14px !important;
  text-wrap: balance;
  -webkit-hyphens: auto;
          hyphens: auto;
}
.task:hover .removeTask {
  opacity: 1;
  cursor: pointer;
}
.task:hover .removeTask svg {
  fill: rgba(0, 0, 0, 0.703);
}
.task input {
  display: block !important;
  grid-area: input;
}
.task input[type=checkbox]:checked ~ p {
  text-decoration: line-through;
  text-decoration-color: rgba(0, 0, 0, 0.793);
  text-decoration-thickness: 2px;
  color: rgba(0, 0, 0, 0.21);
}
.task button.removeTask {
  opacity: 0;
  grid-area: button;
}
.task button {
  background: rgba(255, 255, 255, 0);
  outline: none;
  border: none;
  cursor: pointer;
}

.add_task {
  width: 100%;
  height: 40px;
}
.add_task #addTask {
  width: 100%;
  height: 100%;
  outline: none;
  border: none;
  background-color: rgba(255, 255, 255, 0);
  text-indent: 30px;
  color: rgb(0, 0, 0);
  font-size: 1.3em;
}

@media only screen and (max-width: 768px) {
  body {
    display: grid;
    grid-template-columns: 20vw 60vw 20vw;
    grid-template-rows: 10vh 70vh 20vh;
  }
  main {
    gap: 10px;
  }
  main div:nth-of-type(2),
  main div:nth-of-type(3) {
    font-size: 18px;
    text-wrap: balance;
    text-align: center;
  }
  main div:nth-of-type(4) {
    width: 60%;
  }
  main div:nth-of-type(4) input {
    width: 100%;
    height: 30px;
    font-size: 30px;
  }
  main #timer {
    font-size: 5em;
  }
  footer {
    padding: 10px;
    grid-template-columns: 50% 50%;
    grid-template-rows: 50% 50%;
    grid-template-areas: "top top" "left right";
    row-gap: 10px;
  }
  footer .setting {
    grid-area: right;
  }
  footer .tasks {
    grid-area: left;
  }
  footer .center {
    grid-area: top;
    padding: 10px;
  }
  footer .setting,
  footer .tasks,
  footer .center {
    text-align: center;
  }
  .add_date {
    right: 150px;
  }
}
#loader {
  z-index: 20;
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
}
#loader h2 {
  animation: load 1s ease infinite;
}

@keyframes load {
  0%, 100% {
    transform: rotate(0deg);
  }
  10%, 90%, 30%, 70% {
    transform: rotate(10deg);
  }
  20%, 80%, 40%, 60% {
    transform: rotate(-10deg);
  }
}/*# sourceMappingURL=index.css.map */